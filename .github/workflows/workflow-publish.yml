---
name: workflow-build
on:
  workflow_call:
    inputs:
      ref:
        description: Git reference to checkout
        required: true
        type: string
        default: ""
      environment:
        description: Environment for secret access
        required: true
        type: string
      publish_required:
        description: Is publication a required step ?
        default: false
        type: boolean
        required: false
      sign_required:
        description: Is signature required ?
        default: true
        type: boolean
        required: false
      sign_key_uuid:
        description: Signature key uuid
        required: false
        type: string
        default: ""
      pypi_repository_url:
        description: pypi server url
        required: false
        type: string
        default: https://test.pypi.org/legacy/
    secrets:
      pypi_token:
        description: pypi authentication token
        required: true
      sign_key_passphrase:
        description: Signature key passphrase
        required: false
      sign_key:
        description: Signature key (armored export)
        required: false
jobs:
  publish:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Import GPG
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.sign_key }}
          passphrase: ${{ secrets.sign_key_passphrase }}
          fingerprint: 74C0C759C46E40BC421BC6DBDCCFEB9347EE8CC6
        if: ${{ inputs.sign_key_uuid != '' }}
      - name: Build
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.pypi_token }}
          TWINE_REPOSITORY_URL: ${{ inputs.pypi_repository_url }}
          TWINE_NON_INTERACTIVE: true
        run: |
          SKIP_EXISTING=${{ inputs.publish_required != true }}
          # if signing is required, check that all settings are available
          if [ "${{ inputs.sign_required }}" == "true" ]; then
            [ -z "${{ env.sign_key_uuid }}" ] || { echo "`input.sign_key_uuid` value is missing !" >&2; exit 1; }
            [ ! gpg --list-secret-keys --keyid-format=long "${{ inputs.sign_key_uuid }}" 2&>/dev/null ] || { echo "No signature key available for ${{ inputs.sign_key_uuid }}" >&2; exit 1; }
          fi
          # setup signing if available
          if [ -n "${{ env.sign_key_uuid }}" && gpg --list-secret-keys --keyid-format=long "${{ inputs.sign_key_uuid }}" 2&>/dev/null ]; then
            SIGN="-s -i ${{ inputs.sign_key_uuid }}"
          fi
          python -m pip install --upgrade pip build twine
          python -m build --sdist --wheel
          echo twine upload -s -i httpieovhauth@gmail.com $SKIP_EXISTING dist/*
