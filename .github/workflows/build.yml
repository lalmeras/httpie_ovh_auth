---
name: Build
on:
  # run on all push and for pull request
  push:
    branches:
      - '**'
      - '!main'
  pull_request:
    types:
      - opened
      - synchronize
      - closed
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9']
        push-artifacts: [false]
        include:
          - python-version: "3.10"
            push-artifacts: true
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/build
        with:
          python-version: ${{ matrix.python-version }}
          push-artifacts: ${{ matrix.push-artifacts }}
  publish-testpypi:
    # then publish on test.pypi.org
    needs: build
    runs-on: ubuntu-latest
    if: github.ref_protected
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/publish
        with:
          publish_required: false
          sign_required: false
          sign_key_uuid: httpieovhauth@gmail.com
          pypi_repository_url: https://test.pypi.org/legacy/
          pypi_token: ${{ secrets.PYPI_TOKEN }}
          sign_key: ${{ secrets.GPG_PRIVATE_KEY }}
          sign_key_passphrase: ${{ secrets.GPG_PASSPHRASE }}
  publish-pypi:
    needs: build
    runs-on: ubuntu-latest
    if: false
    environment: testpypi
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/publish
        with:
          publish_required: true
          sign_required: true
          sign_key_uuid: httpieovhauth@gmail.com
          pypi_repository_url: https://upload.pypi.org/legacy/
          pypi_token: ${{ secrets.PYPI_TOKEN }}
          sign_key: ${{ secrets.GPG_PRIVATE_KEY }}
          sign_key_passphrase: ${{ secrets.GPG_PASSPHRASE }}
  version:
    # only for closed and merged pull_request on main: update and tag version, merge back to dev
    needs: build
    if: ${{ github.event_name == 'pull_request' && github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main' }}
    permissions:
      contents: write
    runs-on: ubuntu-latest
    outputs:
      publish_ref: ${{ steps.version.outputs.publish_ref }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Increment version
        id: version
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          git fetch
          pip install --upgrade tbump 'semver<3'
          NEW_VERSION="$( ./.github/scripts/version.py minor "$( tbump current-version )" )"
          echo "Updating version to $NEW_VERSION"
          tbump --non-interactive "$NEW_VERSION"
          echo "::set-output name=publish_ref::$( git rev-parse HEAD )"
          git checkout dev
          echo "Setup merge version $NEW_VERSION on dev"
          tbump --non-interactive --only-patch "$NEW_VERSION"
          git commit -a -m "Switch to $NEW_VERSION to avoid merge conflict"
          git merge main
          git push
          DEV_VERSION="$( ./.github/version.py minor "$NEW_VERSION" )"
          echo "Updating dev version to $DEV_VERSION"
          tbump --non-interactive --no-tag "$DEV_VERSION"
